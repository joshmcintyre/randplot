# This file contains code that plots a histogram for a random data source
#
# Author: Josh McIntyre
#

import matplotlib.pyplot as pyplot
import hashlib
import os
import sys
import random
from enum import Enum

# Define functions for fetching random data
DATA_POINTS = 100000
SEED = 0

class RandSource(Enum):
    NON_CS_PRNG = 0
    CS_PRNG = 1

def gen_cs_prng(num_points, seed):

    start = hashlib.sha256(bytes(seed)).digest()
    data = []
    for i in range(0, num_points):
        msg = start + i.to_bytes(4, sys.byteorder)
        digest = hashlib.sha256(msg).digest()[0] # Trimmed to 1 byte for 0-255
        data.append(digest)
    return data

def gen_non_cs_prng(num_points, seed):

    random.seed(SEED)
    return [ random.randint(0, 256) for i in range(0, num_points)]

def get_data(rand_source, num_points, seed):

    if rand_source == RandSource.CS_PRNG:
        return gen_cs_prng(num_points, seed)
    elif rand_source == RandSource.NON_CS_PRNG:
        return gen_non_cs_prng(num_points, seed)

# Define plotting-related functions
def plot_distribution(data, source):

    fig, ax = pyplot.subplots()
    ax.hist(data, bins=8, linewidth=1, edgecolor="white")
    ax.set_title(f"Distribution of random numbers generated by {source.name}")

    pyplot.show() 
    
# Main entry point for the program
def main():

    # Set the desired source
    source = RandSource.CS_PRNG
    
    # Generate data and plot
    data = get_data(source, DATA_POINTS, SEED)
    plot_distribution(data, source)

if __name__ == "__main__":
    main()
